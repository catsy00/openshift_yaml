---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: pythonex
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    build: pythonex
  name: pythonex
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: pythonex:latest
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    type: Git
    git:
      uri: 'https://github.com/catsy00/pythonex.git'
  strategy:
    dockerStrategy:
      from:
        kind: DockerImage
        name: ubuntu:16.04
    type: Docker
  successfulBuildsHistoryLimit: 5
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: pythonex
  name: pythonex
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    app: pythonex
    deploymentconfig: pythonex
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pythonex
        deploymentconfig: pythonex
    spec:
      containers:
      - image: pythonex:latest
        imagePullPolicy: Always
        name: pythonex
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - pythonex
      from:
        kind: ImageStreamTag
        name: pythonex:latest
    type: ImageChange
---
apiVersion: v1
kind: Service
metadata:
    app: pythonex
    name: pythonex
spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: pythonex
      deploymentconfig: pythonex
    type: LoadBalancer 
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  app: pythonex
  name: pythonex
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: pythonex
    weight: 100